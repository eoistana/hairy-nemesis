<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="XMLSchema2"
    targetNamespace="engine"
    elementFormDefault="qualified"
    xmlns="http://tempuri.org/XMLSchema2.xsd"
    xmlns:mstns="http://tempuri.org/XMLSchema2.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:en="engine"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
>
  <xs:element name="Module">
    <xs:complexType>
      <xs:annotation>
        <xs:documentation>
          Module definition
        </xs:documentation>
      </xs:annotation>
      <xs:sequence>
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
          <xs:element name="Using">
            <xs:complexType>
              <xs:attribute name="module" use="required" type="xs:QName">
                <xs:annotation>
                  <xs:documentation>
                    A module name to refer to
                  </xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element name="SimpleType">
            <xs:complexType>
              <xs:attribute name="name" use="required" type="xs:NCName"/>
              <xs:attribute name="cstype" use="required" type="xs:string"/>
            </xs:complexType>
          </xs:element>
          <xs:group ref="en:DataContentGroup"/>
          <xs:element name="Enum" type="en:EnumType"/>
          <xs:element name="Event" type="en:EventType"/>
          <xs:element name="Message" type="en:MessageType"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="name" use="required" type="xs:NCName">
        <xs:annotation>
          <xs:documentation>
            Name of this module
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
    <xs:unique name="EventElementsAreUnique">
      <xs:selector xpath=".//en:Event"/>
      <xs:field xpath="@name"/>
    </xs:unique>
    <xs:unique name="UniqueDataAndEnumerationNames">
      <xs:annotation>
        <xs:documentation>
          Data components and enumerations must have a unique name
        </xs:documentation>
      </xs:annotation>
      <xs:selector xpath=".//en:Data|.//en:Enum"/>
      <xs:field xpath="@name"/>
    </xs:unique>
    <xs:unique name="UniqueDataNames">
      <xs:selector xpath=".//en:Data"/>
      <xs:field xpath="@name"/>
    </xs:unique>
  </xs:element>

  

  <xs:group name="DataContentGroup">
    <xs:sequence>
      <xs:element name="Data" type="en:DataType">
        <xs:key name="DataElementsAreUnique">
          <xs:selector xpath="./en:Field|./en:List|./en:Array"/>
          <xs:field xpath="@name"/>
        </xs:key>
        <xs:keyref name="KeyFieldsAreKnown" refer="en:DataElementsAreUnique">
          <xs:selector xpath="en:Key/en:FieldRef"></xs:selector>
          <xs:field xpath="@ref"></xs:field>
        </xs:keyref>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:complexType name="DataType">
    <xs:annotation>
      <xs:documentation>
        Defines a data component
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Summary" type="en:SummaryType" minOccurs="0" maxOccurs="1"/>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Extends">
          <xs:annotation>
            <xs:documentation>
              Extending a data component will add a field to this component, and this component will get a Parent pointer.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="ref" use="required" type="xs:string"/>
            <xs:attribute name="parentvar" use="optional" type="xs:string" default="Parent"/>
            <xs:attribute name="partofkey" use="optional" type="xs:boolean" default="false"/>
            <xs:attribute name="parenttype" use="optional" default="Field">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="Field"/>
                  <xs:enumeration value="List"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Field" type="en:FieldType"/>
        <xs:element name="List" type="en:ListType"/>
        <xs:element name="Array" type="en:ArrayType"/>
      </xs:choice>
      <xs:element name="Required" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="FieldRef" type="en:FieldRefType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Key" type="en:KeyType" minOccurs="0" maxOccurs="1"/>
      <xs:choice minOccurs="0" maxOccurs="2">
        <xs:element name="Messages" type="en:MessagesType" minOccurs="0" maxOccurs="1"/>
        <xs:element name="Events" type="en:EventsType" minOccurs="0" maxOccurs="1"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="xs:NCName">
      <xs:annotation>
        <xs:documentation>
          A unique identifier for the data component
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="base" use="optional" type="xs:QName">
      <xs:annotation>
        <xs:documentation>
          Parent data component to inherit from
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="singleton" use="optional" type="xs:boolean" default="false">
      <xs:annotation>
        <xs:documentation>
          Is this a singleton
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="SummaryType">
    <xs:annotation>
      <xs:documentation>
        Adds a summary declaration to the generated class 
      </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">        
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="EnumType">
    <xs:annotation>
      <xs:documentation>
        Defines an enumeration
      </xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Value" type="en:EnumValueType"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="xs:NCName">
      <xs:annotation>
        <xs:documentation>
          A unique identifier for the enumeration
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="flags" use="optional" type="xs:boolean" default="false">
      <xs:annotation>
        <xs:documentation>
          Flags enum or not
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="description" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Description to be added as summary in the code
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="EnumValueType">
    <xs:annotation>
      <xs:documentation>
        An enumeration value
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" use="required" type="xs:NCName">
      <xs:annotation>
        <xs:documentation>
          A unique name for the enumeration value
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Enumeration value
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="description" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Description to be added as summary in the code
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="MessagesType">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="Message" type="en:MessageType"/>
      <xs:element name="MessageRef" type="en:MessageRefType"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="EventsType">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="Implement" type="en:EventRefType"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="EventType">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Parameter">
        <xs:complexType>
          <xs:attribute name="name" use="required" type="xs:NCName"/>
          <xs:attribute name="type" use="required" type="xs:QName"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="xs:NCName"/>
    <xs:attribute name="description" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Description to be added as summary in the code
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  
  <xs:complexType name="MessageType">
    <xs:sequence>
      <xs:element name="Summary" type="en:SummaryType" minOccurs="0" maxOccurs="1"/>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Parameter">
          <xs:complexType>
            <xs:attribute name="name" use="required" type="xs:NCName"/>
            <xs:attribute name="type" use="required" type="xs:QName"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:element name="Returns" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:attribute name="dataref" type="xs:QName" use="required">
            <xs:annotation>
              <xs:documentation>
                The message class to return
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="returnmethod" default="Asynchronized">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Asynchronized">
                  <xs:annotation>
                    <xs:documentation>
                      Default behavior. Return value will be available at next status update.
                    </xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="Synchronized">
                  <xs:annotation>
                    <xs:documentation>
                      Blocking call. Will return answer at once.
                    </xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="xs:NCName"/>
    <xs:attribute name="expose" use="optional" type="xs:boolean" default="false"/>
  </xs:complexType>

  <xs:complexType name="FieldType">
    <xs:annotation>
      <xs:documentation>
        Defines a field on a data component
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" use="required" type="xs:NCName">
      <xs:annotation>
        <xs:documentation>
          The name of the field, unique among fields, lists, arrays and enums to the containing data component
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="required" type="xs:QName"/>
    <xs:attribute name="default" use="optional" type="xs:string"/>
    <xs:attribute name="description" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Description to be added as summary in the code
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ListType">
    <xs:annotation>
      <xs:documentation>
        Defines a list type field on a data component
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:element name="Element" type="en:FieldType"/>
        <xs:element name="List" type="en:ListType"/>
        <xs:element name="Array" type="en:ArrayType"/>
      </xs:choice>
      <xs:element name="OrderBy" minOccurs="0" maxOccurs="1" type="en:OrderByType"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="xs:NCName">
      <xs:annotation>
        <xs:documentation>
          The name of the list, unique among fields, lists, arrays and enums to the containing data component
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="required">
      <xs:annotation>
        <xs:documentation>
          The type of list to implement
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="List">
            <xs:annotation>
              <xs:documentation>
                Implements a regular generic List
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="OrderedList">
            <xs:annotation>
              <xs:documentation>
                Implements a SortedList
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Dictionary">
            <xs:annotation>
              <xs:documentation>
                Implements a dictionary
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="description" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Description to be added as summary in the code
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ArrayType">
    <xs:annotation>
      <xs:documentation>
        Defines an array type field on a data component
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="Element" type="en:FieldType"/>
      <xs:element name="List" type="en:ListType"/>
      <xs:element name="Array" type="en:ArrayType"/>
    </xs:choice>
    <xs:attribute name="name" use="optional" type="xs:NCName">
      <xs:annotation>
        <xs:documentation>
          The name of the array, unique among fields, lists, arrays and enums to the containing data component
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="description" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Description to be added as summary in the code
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="OrderByType">
    <xs:annotation>
      <xs:documentation>
        An ordered list of field refs, used by the SortedList variant
      </xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs="1" maxOccurs="unbounded">
      <xs:element name="FieldRef" type="en:FieldRefType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="KeyType">
    <xs:annotation>
      <xs:documentation>
        An ordered list of field refs, used as the key to lookup data
      </xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs="1" maxOccurs="unbounded">
      <xs:element name="FieldRef" type="en:FieldRefType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DataRefType">
    <xs:annotation>
      <xs:documentation>
        A reference to defined Data component
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="ref" type="xs:QName" use="required">
      <xs:annotation>
        <xs:documentation>
          Name of the Data component to refer to
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="FieldRefType">
    <xs:annotation>
      <xs:documentation>
        A reference to a defined field
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="ref" type="xs:ENTITY" use="required">
      <xs:annotation>
        <xs:documentation>
          Name of the field to refer to
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="MessageRefType">
    <xs:attribute name="ref" type="xs:ENTITY" use="required"/>
    <xs:attribute name="handled" use="optional" default="ByEvent">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ByEvent"/>
          <xs:enumeration value="Directly"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="EventRefType">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Process">
        <xs:complexType>
          <xs:attribute name="message" use="required" type ="xs:QName"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="event" type="xs:ENTITY" use="required"/>
  </xs:complexType>
</xs:schema>
